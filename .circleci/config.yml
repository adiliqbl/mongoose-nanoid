version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:17.2.0
    - image: circleci/mongo:4.4

jobs:
  test:
    <<: *defaults
    steps:
      - setup_remote_docker
      - run:
          name: Waiting for Mongo
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Install mongo client
          command: |
            wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
            sudo apt-get update && sudo apt-get install -y mongodb-org
      - run:
          name: Setup mongodb
          command: |
            mongo --eval 'db.createCollection("test")'

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install
      - run:
          name: Run tests
          command: npm test

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
#      - add_ssh_keys:
#          fingerprints:
#            - "5f:08:a5:83:2b:4a:6f:d0:4a:58:0f:34:eb:ea:10:f4"
      - run:
          name: Add github.com to remote hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Update version, tag & commit
          command: |
            git branch --set-upstream-to=origin/$CIRCLE_BRANCH $CIRCLE_BRANCH
            git config pull.ff only
            git config user.name "circleci"
            git config user.email "circleci@adiliqbl.com"
            git pull
            
            npm version patch --force
          
            declare -x VERSION=$(jq -r '.version' package.json)
            echo $VERSION
            git tag v$VERSION
            git remote -v
            git push origin
            git push origin --tags
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
